{"version":3,"file":"cypher.js","sourceRoot":"","sources":["../../src/utill/cypher.ts"],"names":[],"mappings":";;;AAAA,8DAA8B;AAC9B,4DAA4B;AAC5B,MAAM,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC;AAEzC,MAAqB,MAAM;IAGzB,YAAY,MAAe,EAAE,MAAe;QAC1C,IAAI,MAAM,IAAI,MAAM,EAAE;YACpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACtB;aAAM;YACL,MAAM,IAAI,GAAG,iBAAO,EAAE,CAAC;YACvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;YAC3B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SAC3B;IACH,CAAC;IAED,OAAO,CAAC,GAAW;QACjB,MAAM,SAAS,GAAG,gBAAM,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QAC3E,OAAO,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;IAED,OAAO,CAAC,SAAiB,EAAE,SAAiB;QAC1C,MAAM,SAAS,GAAG,gBAAM,CAAC,aAAa,CACpC,SAAS,EACT,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CACrC,CAAC;QACF,OAAO,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC;CACF;AA1BD,yBA0BC","sourcesContent":["import keypair from \"keypair\";\nimport crypto from \"crypto\";\nconst Buffer = require(\"buffer/\").Buffer;\n\nexport default class Cypher {\n  secKey: string;\n  pubKey: string;\n  constructor(secKey?: string, pubKey?: string) {\n    if (secKey && pubKey) {\n      this.secKey = secKey;\n      this.pubKey = pubKey;\n    } else {\n      const pair = keypair();\n      this.secKey = pair.private;\n      this.pubKey = pair.public;\n    }\n  }\n\n  encrypt(raw: string) {\n    const encrypted = crypto.privateEncrypt(this.secKey, new Buffer.from(raw));\n    return encrypted.toString(\"base64\");\n  }\n\n  decrypt(encrypted: string, publicKey: string) {\n    const decrypted = crypto.publicDecrypt(\n      publicKey,\n      new Buffer.from(encrypted, \"base64\")\n    );\n    return decrypted.toString(\"utf8\");\n  }\n}\n"]}