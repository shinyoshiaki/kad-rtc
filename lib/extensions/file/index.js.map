{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/extensions/file/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { decode, encode } from \"@msgpack/msgpack\";\n\nimport JobSystem from \"../../kademlia/services/jobsystem\";\nimport { Kademlia } from \"../..\";\nimport sha1 from \"sha1\";\n\nexport async function storeFile(file: ArrayBuffer[], kad: Kademlia) {\n  if (file.length > 0) {\n    const jobs: {\n      key: string;\n      value: Uint8Array;\n    }[] = [];\n\n    {\n      const last: ArrayBuffer = file.pop()!;\n      console.log({ last });\n      const item = { value: new Uint8Array(last), next: undefined };\n      console.log({ item });\n      const value = encode(item);\n      const key = sha1(Buffer.from(value.buffer)).toString();\n      jobs.push({ key, value });\n    }\n    console.log({ file });\n\n    const reverse = file.reverse();\n    reverse.forEach(ab => {\n      const pre = jobs.slice(-1)[0];\n      const item = { value: new Uint8Array(ab), next: pre.key };\n      const value = encode(item);\n      const key = sha1(Buffer.from(value)).toString();\n      jobs.push({ key, value });\n    });\n\n    const workers = new JobSystem({ a: 10 });\n\n    await Promise.all(\n      jobs.map(async job => {\n        await workers.add(kad.store.bind(kad), [job.key, job.value]);\n      })\n    );\n\n    return jobs.slice(-1)[0].key;\n  }\n  return undefined;\n}\n\nexport async function findFile(headerKey: string, kad: Kademlia) {\n  const chunks: Uint8Array[] = [];\n  const { item } = (await kad.findValue(headerKey))!;\n  if (!item) return;\n  const firstJson = decode(new Uint8Array(item.value as ArrayBuffer)) as {\n    value: Uint8Array;\n    next: string;\n  };\n  console.log({ firstJson });\n\n  const work = () =>\n    new Promise<boolean>(async (resolve, reject) => {\n      try {\n        for (let json = firstJson; ; ) {\n          chunks.push(json.value);\n          if (!json.next) {\n            resolve(true);\n            break;\n          }\n          const { item } = (await kad.findValue(json.next))!;\n          if (!item) {\n            reject(false);\n            break;\n          }\n          json = decode(new Uint8Array(item.value as ArrayBuffer)) as any;\n          console.log({ json });\n        }\n      } catch (error) {}\n    });\n\n  if (item) {\n    const res = await work().catch(console.error);\n    if (res) {\n      return chunks.map(buffer => buffer.buffer);\n    }\n  }\n  return undefined;\n}\n"]}