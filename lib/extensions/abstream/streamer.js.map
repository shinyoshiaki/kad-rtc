{"version":3,"file":"streamer.js","sourceRoot":"","sources":["../../../src/extensions/abstream/streamer.ts"],"names":[],"mappings":";;;AAAA,mCAAoD;AAEpD,8DAA4B;AAG5B,MAAqB,iBAAiB;IAAtC;QACU,WAAM,GAAiB,EAAE,CAAC;QAC1B,aAAQ,GAAG,IAAI,iBAAK,EAAgB,CAAC;QAE7C,UAAK,GAAG,CAAC,KAAiB,EAAE,EAAE;YAC5B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxB,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,EAAE,EAAE;gBAC3B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACnC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;aAClB;QACH,CAAC,CAAC;QAEF,iBAAY,GAAG,CAAO,GAAa,EAAE,QAA6B,EAAE,EAAE;YACpE,IAAI,MAAM,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;YAE7C,QAAQ,CAAC,oBAAY,CAAC,mBAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAE5C,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAC5B,MAAM,OAAO,GAAG,mBAAW,CAAC,MAAM,CAAC,CAAC;gBAEpC,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;gBACtC,MAAM,GAAG,GAAG,oBAAY,CAAC,mBAAW,CAAC,GAAG,CAAC,CAAC,CAAC;gBAE3C,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;gBACtB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;oBACjB,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC7B,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACnB,CAAC,CAAC,CAAC;gBAEH,MAAM,GAAG,GAAG,CAAC;YACf,CAAC,CAAC,CAAC;QACL,CAAC,CAAA,CAAC;IACJ,CAAC;CAAA;AAhCD,oCAgCC","sourcesContent":["import { abs2torrent, torrent2hash } from \"./const\";\n\nimport Event from \"rx.mini\";\nimport { Kademlia } from \"../..\";\n\nexport default class StreamArraybuffer {\n  private chunks: Uint8Array[] = [];\n  private onChunks = new Event<Uint8Array[]>();\n\n  addAb = (uint8: Uint8Array) => {\n    this.chunks.push(uint8);\n    if (this.chunks.length > 10) {\n      this.onChunks.execute(this.chunks);\n      this.chunks = [];\n    }\n  };\n\n  streamViaKad = async (kad: Kademlia, onHeader: (s: string) => void) => {\n    let buffer = await this.onChunks.asPromise();\n\n    onHeader(torrent2hash(abs2torrent(buffer)));\n\n    this.onChunks.subscribe(abs => {\n      const torrent = abs2torrent(buffer);\n\n      const value = JSON.stringify(torrent);\n      const msg = torrent2hash(abs2torrent(abs));\n\n      kad.store(value, msg);\n      torrent.map(item => {\n        const uint8 = buffer[item.i];\n        kad.store(uint8);\n      });\n\n      buffer = abs;\n    });\n  };\n}\n"]}