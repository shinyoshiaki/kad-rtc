{"version":3,"file":"core.js","sourceRoot":"","sources":["../../src/webrtc/core.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  RTCPeerConnection,\n  RTCSessionDescription,\n  RTCIceCandidate\n} from \"wrtc\";\n\nimport Event from \"rx.mini\";\n\nconst injectableProcess = typeof process !== \"undefined\" ? process : undefined;\n\nconst injectableNavigator =\n  typeof window !== \"undefined\" ? window.navigator : undefined;\n\nexport interface message {\n  label: string;\n  data: any;\n  nodeId: string;\n}\n\ninterface option {\n  disable_stun: boolean;\n  stream: MediaStream;\n  track: MediaStreamTrack;\n  nodeId: string;\n  trickle: boolean;\n}\n\nexport default class WebRTC {\n  rtc: RTCPeerConnection;\n\n  onSignal = new Event<any>();\n  onConnect = new Event();\n  onDisconnect = new Event();\n  onData = new Event<message>();\n  onAddTrack = new Event<MediaStream>();\n\n  private dataChannels: { [key: string]: RTCDataChannel };\n\n  nodeId: string;\n  isConnected = false;\n  isDisconnected = false;\n  isOffer = false;\n\n  remoteStream: MediaStream | undefined;\n  timeoutPing: NodeJS.Timeout | undefined;\n\n  constructor(public opt: Partial<option> = {}) {\n    const { nodeId, stream, track } = opt;\n\n    this.dataChannels = {};\n    this.nodeId = nodeId || \"peer\";\n\n    this.rtc = this.prepareNewConnection();\n\n    if (stream) {\n      stream.getTracks().forEach(track => this.rtc.addTrack(track, stream));\n    } else if (track) {\n      this.rtc.addTrack(track);\n    }\n  }\n\n  private prepareNewConnection() {\n    const { disable_stun, trickle } = this.opt;\n\n    const peer: RTCPeerConnection = disable_stun\n      ? new RTCPeerConnection({\n          iceServers: []\n        })\n      : new RTCPeerConnection({\n          iceServers: [\n            {\n              urls: \"stun:stun.l.google.com:19302\"\n            }\n          ]\n        });\n\n    peer.ontrack = evt => {\n      const stream = evt.streams[0];\n      this.onAddTrack.execute(stream);\n      this.remoteStream = stream;\n    };\n\n    peer.oniceconnectionstatechange = () => {\n      switch (peer.iceConnectionState) {\n        case \"failed\":\n          break;\n        case \"disconnected\":\n          try {\n            this.timeoutPing = setTimeout(() => {\n              this.hangUp();\n            }, 2000);\n\n            this.send(\"ping\", \"live\");\n          } catch (error) {\n            console.warn({ error });\n          }\n          break;\n        case \"connected\":\n          if (this.timeoutPing) clearTimeout(this.timeoutPing);\n          break;\n        case \"closed\":\n          break;\n        case \"completed\":\n          break;\n      }\n    };\n\n    peer.onicecandidate = evt => {\n      if (!this.isConnected) {\n        if (evt.candidate) {\n          if (trickle) {\n            this.onSignal.execute({ type: \"candidate\", ice: evt.candidate });\n          }\n        } else {\n          if (!trickle && peer.localDescription) {\n            this.onSignal.execute(peer.localDescription);\n          }\n        }\n      }\n    };\n\n    peer.ondatachannel = evt => {\n      const dataChannel = evt.channel;\n      this.dataChannels[dataChannel.label] = dataChannel;\n      this.dataChannelEvents(dataChannel);\n    };\n\n    peer.onsignalingstatechange = e => {\n      this.negotiating = peer.signalingState != \"stable\";\n    };\n\n    return peer;\n  }\n\n  hangUp() {\n    console.log(\"hungup\", this.nodeId);\n    this.isDisconnected = true;\n    this.isConnected = false;\n    this.onDisconnect.execute();\n    this.disconnect();\n  }\n\n  makeOffer() {\n    this.isOffer = true;\n    const { trickle } = this.opt;\n    this.createDatachannel(\"datachannel\");\n\n    this.rtc.onnegotiationneeded = async () => {\n      if (this.negotiating || this.rtc.signalingState != \"stable\") return;\n      this.negotiating = true;\n\n      const sdp = await this.rtc.createOffer().catch(console.warn);\n\n      if (!sdp) return;\n\n      const result = await this.rtc\n        .setLocalDescription(sdp)\n        .catch(err => JSON.stringify(err) + \"err\");\n      if (typeof result === \"string\") {\n        return;\n      }\n\n      const local = this.rtc.localDescription;\n\n      if (trickle && local) {\n        this.onSignal.execute(local);\n      }\n\n      this.negotiation();\n    };\n  }\n\n  negotiating = false;\n  private negotiation() {\n    this.rtc.onnegotiationneeded = async () => {\n      if (!this.isConnected) return;\n\n      try {\n        if (this.negotiating || this.rtc.signalingState != \"stable\") return;\n        this.negotiating = true;\n        const options = {};\n        const sessionDescription = await this.rtc.createOffer(options).catch();\n        await this.rtc.setLocalDescription(sessionDescription).catch();\n        const local = this.rtc.localDescription;\n        if (local) {\n          this.send(JSON.stringify(local), \"update\");\n        }\n      } finally {\n        this.negotiating = false;\n      }\n    };\n  }\n\n  private async setAnswer(sdp: any) {\n    if (this.isOffer) {\n      await this.rtc\n        .setRemoteDescription(new RTCSessionDescription(sdp))\n        .catch(console.warn);\n    }\n  }\n\n  private async makeAnswer(offer: any) {\n    const { trickle } = this.opt;\n\n    await this.rtc\n      .setRemoteDescription(new RTCSessionDescription(offer))\n      .catch(console.warn);\n\n    const answer = await this.rtc.createAnswer().catch(console.warn);\n    if (!answer) {\n      console.warn(\"no answer\");\n      return;\n    }\n\n    await this.rtc.setLocalDescription(answer).catch(console.warn);\n\n    const local = this.rtc.localDescription;\n\n    if (this.isConnected) {\n      this.send(JSON.stringify(local), \"update\");\n    } else if (trickle && local) {\n      this.onSignal.execute(local);\n    }\n\n    this.negotiation();\n  }\n\n  async setSdp(sdp: any) {\n    switch (sdp.type) {\n      case \"offer\":\n        this.makeAnswer(sdp);\n        break;\n      case \"answer\":\n        this.setAnswer(sdp);\n        break;\n      case \"candidate\":\n        await this.rtc\n          .addIceCandidate(new RTCIceCandidate(sdp.ice))\n          .catch(console.warn);\n        break;\n    }\n  }\n\n  private async createDatachannel(label: string) {\n    if (!Object.keys(this.dataChannels).includes(label)) {\n      try {\n        const dc = this.rtc.createDataChannel(label);\n        this.dataChannels[label] = dc;\n        await this.dataChannelEvents(dc);\n      } catch (dce) {\n        console.error(dce);\n      }\n    }\n  }\n\n  private dataChannelEvents(channel: RTCDataChannel) {\n    return new Promise(resolve => {\n      channel.onopen = () => {\n        if (!this.isConnected) {\n          this.isConnected = true;\n          this.onConnect.execute();\n        }\n        resolve();\n      };\n\n      channel.onmessage = async event => {\n        if (!event) return;\n        try {\n          if (channel.label === \"update\") {\n            const sdp = JSON.parse(event.data);\n            this.setSdp(sdp);\n          } else if (channel.label === \"live\") {\n            if (event.data === \"ping\") this.send(\"pong\", \"live\");\n            else if (this.timeoutPing) clearTimeout(this.timeoutPing);\n          } else {\n            this.onData.execute({\n              label: channel.label,\n              data: event.data,\n              nodeId: this.nodeId\n            });\n          }\n        } catch (error) {\n          console.warn(error);\n        }\n      };\n\n      channel.onerror = err => console.warn(err);\n      channel.onclose = () => {};\n    });\n  }\n\n  async send(data: any, label?: string) {\n    label = label || \"datachannel\";\n    if (!Object.keys(this.dataChannels).includes(label)) {\n      try {\n        await this.createDatachannel(label);\n      } catch (_) {}\n    }\n    try {\n      this.dataChannels[label].send(data);\n    } catch (error) {\n      console.warn(error);\n      this.hangUp();\n    }\n  }\n\n  addTrack(track: MediaStreamTrack, stream: MediaStream) {\n    this.rtc.addTrack(track, stream);\n  }\n\n  disconnect() {\n    const { rtc, dataChannels } = this;\n\n    for (let key in dataChannels) {\n      const channel = dataChannels[key];\n      channel.onmessage = null;\n      channel.onopen = null;\n      channel.onclose = null;\n      channel.onerror = null;\n      channel.close();\n    }\n    this.dataChannels = null as any;\n\n    rtc.oniceconnectionstatechange = null;\n    rtc.onicegatheringstatechange = null;\n    rtc.onsignalingstatechange = null;\n    rtc.onicecandidate = null;\n    rtc.ontrack = null;\n    rtc.ondatachannel = null;\n    rtc.close();\n    this.rtc = null as any;\n  }\n}\n"]}