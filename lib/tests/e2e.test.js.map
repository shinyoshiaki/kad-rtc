{"version":3,"file":"e2e.test.js","sourceRoot":"","sources":["../../src/tests/e2e.test.ts"],"names":[],"mappings":";;;AAAA,0CAAyD;AAGzD,iDAAgD;AAEhD,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE;IACnB,MAAM,GAAG,GAAG,CAAO,KAAiB,EAAE,EAAE;QACtC,MAAM,QAAQ,GAAG,KAAK,CAAC,GAAG,EAAG,CAAC;QAE9B,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAE9C,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;QAEtC,MAAM,OAAO,CAAC,GAAG,CACf,KAAK,CAAC,GAAG,CAAC,CAAM,IAAI,EAAC,EAAE;YACrB,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAE3C,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;YAChC;gBACE,MAAM,EAAE,IAAI,EAAE,GAAG,GAAI,CAAC;gBACtB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;aACpC;QACH,CAAC,CAAA,CAAC,CACH,CAAC;QACF,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAA,CAAC;IAEF,IAAI,CAAC,MAAM,EAAE,GAAS,EAAE;QACtB,MAAM,KAAK,GAAG,MAAM,6BAAc,CAAC,EAAE,EAAE,yBAAc,EAAE,EAAE,OAAO,EAAE,KAAM,EAAE,CAAC,CAAC;QAC5E,MAAM,GAAG,CAAC,KAAK,CAAC,CAAC;IACnB,CAAC,CAAA,EAAE,MAAO,CAAC,CAAC;IAEZ,IAAI,CAAC,QAAQ,EAAE,GAAS,EAAE;QACxB,MAAM,KAAK,GAAG,MAAM,6BAAc,CAAC,EAAE,EAAE,qBAAU,EAAE,EAAE,OAAO,EAAE,KAAM,EAAE,CAAC,CAAC;QACxE,MAAM,GAAG,CAAC,KAAK,CAAC,CAAC;IACnB,CAAC,CAAA,EAAE,MAAO,CAAC,CAAC;AACd,CAAC,CAAC,CAAC","sourcesContent":["import { PeerMockModule, PeerModule } from \"../kademlia\";\n\nimport Kademlia from \"..\";\nimport { testSetupNodes } from \"./setupnetwork\";\n\ndescribe(\"e2e\", () => {\n  const job = async (nodes: Kademlia[]) => {\n    const kadStore = nodes.pop()!;\n\n    const { item } = await kadStore.store(\"test\");\n\n    await new Promise(r => setTimeout(r));\n\n    await Promise.all(\n      nodes.map(async node => {\n        const res = await node.findValue(item.key);\n\n        expect(res).not.toBeUndefined();\n        {\n          const { item } = res!;\n          expect(item.value).toEqual(\"test\");\n        }\n      })\n    );\n    expect(true).toBe(true);\n  };\n\n  test(\"mock\", async () => {\n    const nodes = await testSetupNodes(10, PeerMockModule, { timeout: 60_000 });\n    await job(nodes);\n  }, 600_000);\n\n  test(\"webrtc\", async () => {\n    const nodes = await testSetupNodes(10, PeerModule, { timeout: 60_000 });\n    await job(nodes);\n  }, 600_000);\n});\n"]}