{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/kademlia/actions/store/index.ts"],"names":[],"mappings":";;;AAAA,mEAAmC;AACnC,wDAAwB;AAIxB,MAAM,KAAK,GAAG,CAAC,GAAW,EAAE,KAAa,EAAE,EAAE;IAC3C,OAAO,EAAE,GAAG,EAAE,OAAgB,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;AAC/C,CAAC,CAAC;AAIF,SAA8B,KAAK,CAAC,KAAa,EAAE,EAAuB;;QACxE,MAAM,GAAG,GAAG,cAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;QACnC,KAAK,IAAI,GAAG,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,EAAE,EAAE;YACxD,MAAM,GAAG,GAAG,MAAM,kBAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;YACpC,IAAI,GAAG,KAAK,GAAG,CAAC,IAAI,EAAE;gBACpB,MAAM;aACP;YACD,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC;SAChB;QACD,MAAM,KAAK,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QACtC,KAAK,IAAI,IAAI,IAAI,KAAK,EAAE;YACtB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC;YAC5B,MAAM,IAAI,CAAC,QAAQ,CAAU,SAAS,CAAC,CAAC,SAAS,EAAE,CAAC;SACrD;QACD,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IACzB,CAAC;CAAA;AAfD,wBAeC","sourcesContent":["import findNode from \"../findnode\";\nimport sha1 from \"sha1\";\nimport { DependencyInjection } from \"../../di\";\nimport { OnStore } from \"./listen\";\n\nconst Store = (key: string, value: string) => {\n  return { rpc: \"store\" as const, key, value };\n};\n\nexport type Store = ReturnType<typeof Store>;\n\nexport default async function store(value: string, di: DependencyInjection) {\n  const key = sha1(value).toString();\n  for (let pre = \"\", i = 0; i < di.kTable.kBucketSize; i++) {\n    const res = await findNode(key, di);\n    if (pre === res.hash) {\n      break;\n    }\n    pre = res.hash;\n  }\n  const peers = di.kTable.findNode(key);\n  for (let peer of peers) {\n    peer.rpc(Store(key, value));\n    await peer.eventRpc<OnStore>(\"OnStore\").asPromise();\n  }\n  di.kvs.set(key, value);\n}\n"]}