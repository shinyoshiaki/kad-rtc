{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/kademlia/actions/store/listen/index.ts"],"names":[],"mappings":";;AAKA,MAAM,WAAW;IACf,YAAoB,MAAY,EAAU,EAAuB;QAA7C,WAAM,GAAN,MAAM,CAAM;QAAU,OAAE,GAAF,EAAE,CAAqB;QAKjE,UAAK,GAAG,CAAC,IAAgB,EAAE,EAAE;YAC3B,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC;YAChC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;YAErC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE,GAAU,CAAC,CAAC;YAEhC,IAAI,CAAC,MAAM,CAAC,GAAG,iCAAM,OAAO,EAAE,KAAE,EAAE,IAAG,CAAC;QACxC,CAAC,CAAC;QAXA,MAAM,EAAE,UAAU,EAAE,GAAG,EAAE,CAAC;QAC1B,UAAU,CAAC,YAAY,CAAQ,OAAO,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACxE,CAAC;CAUF;AAED,MAAM,OAAO,GAAG,GAAG,EAAE;IACnB,OAAO,EAAE,GAAG,EAAE,SAAkB,EAAE,CAAC;AACrC,CAAC,CAAC;AAIF,SAAwB,WAAW,CAAC,IAAU,EAAE,EAAuB;IACrE,OAAO,IAAI,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AACnC,CAAC;AAFD,8BAEC","sourcesContent":["import { Store } from \"..\";\nimport { Peer } from \"../../../modules/peer/base\";\nimport { DependencyInjection } from \"../../../di\";\nimport { ID } from \"../../../services/rpcmanager\";\n\nclass ListenStore {\n  constructor(private listen: Peer, private di: DependencyInjection) {\n    const { rpcManager } = di;\n    rpcManager.asObservable<Store>(\"Store\", listen).subscribe(this.store);\n  }\n\n  store = (data: Store & ID) => {\n    const { kvs } = this.di.modules;\n    const { key, value, id, msg } = data;\n\n    kvs.set(key, value, msg as any);\n\n    this.listen.rpc({ ...OnStore(), id });\n  };\n}\n\nconst OnStore = () => {\n  return { rpc: \"OnStore\" as const };\n};\n\nexport type OnStore = ReturnType<typeof OnStore>;\n\nexport default function listenStore(peer: Peer, di: DependencyInjection) {\n  return new ListenStore(peer, di);\n}\n"]}