{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/kademlia/modules/peer/index.ts"],"names":[],"mappings":";;;AAAA,yEAAyC;AAE5B,QAAA,UAAU,GAAG,CAAC,GAAW,EAAE,EAAE,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;AAEzD,MAAqB,IAAI;IAKvB,YAAmB,GAAW;QAAX,QAAG,GAAH,GAAG,CAAQ;QAJ9B,UAAK,GAAG,IAAI,eAAK,EAAO,CAAC;QACzB,iBAAY,GAAG,IAAI,eAAK,EAAE,CAAC;QAC3B,cAAS,GAAG,IAAI,eAAK,EAAE,CAAC;QAIxB,QAAG,GAAG,CAAC,IAAqB,EAAE,EAAE,CAAC,IAAI,eAAK,EAAO,CAAC;QAElD,gBAAW,GAAG,KAAK,IAAkB,EAAE,GAAE,CAAC,CAAC;QAE3C,aAAQ,GAAG,KAAK,EAAE,GAAQ,EAAgB,EAAE,GAAE,CAAC,CAAC;QAEhD,cAAS,GAAG,KAAK,EAAE,GAAQ,EAAgB,EAAE,GAAE,CAAC,CAAC;QAEjD,eAAU,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;IAVW,CAAC;CAWnC;AAhBD,uBAgBC","sourcesContent":["import Event from \"../../../utill/event\";\n\nexport const PeerModule = (kid: string) => new Peer(kid);\n\nexport default class Peer {\n  onRpc = new Event<any>();\n  onDisconnect = new Event();\n  onConnect = new Event();\n\n  constructor(public kid: string) {}\n\n  rpc = (data: { rpc: string }) => new Event<any>();\n\n  createOffer = async (): Promise<any> => {};\n\n  setOffer = async (sdp: any): Promise<any> => {};\n\n  setAnswer = async (sdp: any): Promise<any> => {};\n\n  disconnect = () => {};\n}\n"]}