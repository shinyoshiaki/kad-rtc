{"version":3,"file":"webrtc.js","sourceRoot":"","sources":["../../../../src/kademlia/modules/peer/webrtc.ts"],"names":[],"mappings":";;;AACA,yEAAyC;AACzC,wEAA0C;AAE7B,QAAA,UAAU,GAAG,CAAC,GAAW,EAAE,EAAE,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;AAEzD,MAAqB,IAAI;IAOvB,YAAmB,GAAW;QAAX,QAAG,GAAH,GAAG,CAAQ;QANtB,SAAI,GAAG,QAAQ,CAAC;QAChB,SAAI,GAAG,IAAI,cAAM,EAAE,CAAC;QAC5B,UAAK,GAAG,IAAI,eAAK,EAAO,CAAC;QACzB,iBAAY,GAAG,IAAI,CAAC,IAAI,CAAC,YAAmB,CAAC;QAC7C,cAAS,GAAG,IAAI,CAAC,IAAI,CAAC,SAAgB,CAAC;QAcvC,QAAG,GAAG,CAAC,IAAqB,EAAE,EAAE;YAC9B,MAAM,QAAQ,GAAG,IAAI,eAAK,EAAO,CAAC;YAClC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;YAC/C,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAC9C,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClC,IAAI,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,GAAG,EAAE;oBAC1B,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;iBACvB;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;YACxD,OAAO,QAAQ,CAAC;QAClB,CAAC,CAAC;QAEF,gBAAW,GAAG,GAAS,EAAE;YACvB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;YACtB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;YACnD,OAAO,KAAK,CAAC;QACf,CAAC,CAAA,CAAC;QAEF,aAAQ,GAAG,CAAO,GAAQ,EAAE,EAAE;YAC5B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACtB,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;YACpD,OAAO,MAAM,CAAC;QAChB,CAAC,CAAA,CAAC;QAEF,cAAS,GAAG,CAAO,GAAQ,EAAE,EAAE;YAC7B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACtB,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;YACtC,OAAO,IAAI,CAAC;QACd,CAAC,CAAA,CAAC;QAEF,eAAU,GAAG,GAAG,EAAE;YAChB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;QACzB,CAAC,CAAC;QA5CA,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC9C,IAAI;gBACF,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClC,IAAI,IAAI,CAAC,GAAG,EAAE;oBACZ,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;iBACzB;aACF;YAAC,OAAO,KAAK,EAAE,GAAE;QACpB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;IAC1D,CAAC;CAoCF;AArDD,uBAqDC","sourcesContent":["import Base from \".\";\nimport Event from \"../../../utill/event\";\nimport WebRTC from \"../../../webrtc/core\";\n\nexport const PeerModule = (kid: string) => new Peer(kid);\n\nexport default class Peer implements Base {\n  private type = \"webrtc\";\n  private peer = new WebRTC();\n  onRpc = new Event<any>();\n  onDisconnect = this.peer.onDisconnect as any;\n  onConnect = this.peer.onConnect as any;\n\n  constructor(public kid: string) {\n    const discon = this.peer.onData.subscribe(raw => {\n      try {\n        const data = JSON.parse(raw.data);\n        if (data.rpc) {\n          this.onRpc.excute(data);\n        }\n      } catch (error) {}\n    });\n    this.peer.onDisconnect.once(() => discon.unSubscribe());\n  }\n\n  rpc = (send: { rpc: string }) => {\n    const observer = new Event<any>();\n    this.peer.send(JSON.stringify(send), send.rpc);\n    const discon = this.peer.onData.subscribe(raw => {\n      const data = JSON.parse(raw.data);\n      if (raw.label === data.rpc) {\n        observer.excute(data);\n      }\n    });\n    this.peer.onDisconnect.once(() => discon.unSubscribe());\n    return observer;\n  };\n\n  createOffer = async () => {\n    this.peer.makeOffer();\n    const offer = await this.peer.onSignal.asPromise();\n    return offer;\n  };\n\n  setOffer = async (sdp: any) => {\n    this.peer.setSdp(sdp);\n    const answer = await this.peer.onSignal.asPromise();\n    return answer;\n  };\n\n  setAnswer = async (sdp: any) => {\n    this.peer.setSdp(sdp);\n    await this.peer.onConnect.asPromise();\n    return true;\n  };\n\n  disconnect = () => {\n    this.peer.disconnect();\n  };\n}\n"]}