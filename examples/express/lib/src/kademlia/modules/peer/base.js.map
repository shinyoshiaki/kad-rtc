{"version":3,"file":"base.js","sourceRoot":"","sources":["../../../../../../../src/kademlia/modules/peer/base.ts"],"names":[],"mappings":";;;AAAA,8DAA4B;AAEf,QAAA,UAAU,GAAG,CAAC,GAAW,EAAE,EAAE,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;AAEzD,MAAqB,IAAI;IAKvB,YAAmB,GAAW;QAAX,QAAG,GAAH,GAAG,CAAQ;QAJ9B,UAAK,GAAG,IAAI,iBAAK,EAAO,CAAC;QACzB,iBAAY,GAAG,IAAI,iBAAK,EAAE,CAAC;QAC3B,cAAS,GAAG,IAAI,iBAAK,EAAW,CAAC;QAIjC,QAAG,GAAG,CAAC,IAAqB,EAAE,EAAE,GAAE,CAAC,CAAC;QAEpC,aAAQ,GAAG,CAA4B,GAAa,EAAE,EAAE,CAAC,IAAI,iBAAK,EAAK,CAAC;QAExE,gBAAW,GAAG,GAAuB,EAAE,wDAAE,CAAC,CAAA,CAAC;QAE3C,aAAQ,GAAG,CAAO,GAAQ,EAAgB,EAAE,wDAAE,CAAC,CAAA,CAAC;QAEhD,cAAS,GAAG,CAAO,GAAQ,EAAgB,EAAE,wDAAE,CAAC,CAAA,CAAC;QAEjD,eAAU,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;IAZW,CAAC;CAanC;AAlBD,uBAkBC","sourcesContent":["import Event from \"rx.mini\";\n\nexport const PeerModule = (kid: string) => new Peer(kid);\n\nexport default class Peer {\n  onRpc = new Event<any>();\n  onDisconnect = new Event();\n  onConnect = new Event<boolean>();\n\n  constructor(public kid: string) {}\n\n  rpc = (data: { rpc: string }) => {};\n\n  eventRpc = <T extends { rpc: string }>(rpc: T[\"rpc\"]) => new Event<T>();\n\n  createOffer = async (): Promise<any> => {};\n\n  setOffer = async (sdp: any): Promise<any> => {};\n\n  setAnswer = async (sdp: any): Promise<any> => {};\n\n  disconnect = () => {};\n}\n"]}